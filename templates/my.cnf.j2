[mysqld]
default_authentication_plugin   = mysql_native_password
master_info_repository = TABLE
relay_log_info_repository = TABLE
sync_binlog = 1
log_slave_updates
binlog_format = ROW
binlog_rows_query_log_events = 1
#relay_log = relay.log
relay_log_recovery = 1
enforce_gtid_consistency = 1
gtid_mode= on
slave_rows_search_algorithms = 'INDEX_SCAN,HASH_SCAN'
slave_parallel_type = LOGICAL_CLOCK
slave_parallel_workers = 16
slave_preserve_commit_order=1
slave_transaction_retries=128
sync_relay_log=0
sync_relay_log_info=0
sync_master_info=0

user={{mysql_os_user}}
port={{mysql_port}}
socket={{mysql_datadir}}/tmp/mysql_{{ mysql_port }}.sock
pid_file        = {{mysql_datadir}}/tmp/mysql.pid
basedir= {{ mysql_basedir }}
plugin_dir={{ mysql_basedir }}/lib/plugin
datadir={{mysql_datadir}}/data
tmpdir={{mysql_datadir}}/tmp
character_set_server=utf8mb4
secure_file_priv = {{mysql_datadir}}/tmp/
lower_case_table_names=1
sql_mode = STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
autocommit = 1
transaction_isolation = READ-COMMITTED
explicit_defaults_for_timestamp = 1
max_allowed_packet = 67108864
event_scheduler = 1

#connection
interactive_timeout = 1800
wait_timeout = 1800
lock_wait_timeout = 1800
skip_name_resolve = 1
max_connections = 3000
max_connect_errors = 1000000

##table cache performance settings
table_open_cache = 4096
table_definition_cache = 4096
table_open_cache_instances = 64

# session memory settings
read_buffer_size = 16M
read_rnd_buffer_size = 32M
sort_buffer_size = 8M
tmp_table_size = 64M
join_buffer_size = 128M
thread_cache_size = 64

log_error={{mysql_datadir}}/logs/error.log
log_bin                 = {{mysql_datadir}}/binlog/mysql-bin
relay_log               = {{mysql_datadir}}/relaylog/relay-bin
log_slave_updates = 1
slow_query_log_file={{mysql_datadir}}/logs/slow.log
slow_query_log=on
log_queries_not_using_indexes = 1
log_slow_admin_statements = 1
log_slow_slave_statements = 1
log_throttle_queries_not_using_indexes = 10
expire_logs_days = 7
long_query_time=1
min_examined_row_limit = 100
binlog_rows_query_log_events = 1
log_bin_trust_function_creators = 1
binlog_gtid_simple_recovery=1
log_timestamps=system

#innodb settings
innodb_page_size = 16384
innodb_buffer_pool_size = {{ (ansible_memtotal_mb * 1024 * 1024 * 0.5) | int }}
innodb_buffer_pool_instances = 8
innodb_buffer_pool_load_at_startup = 1
innodb_buffer_pool_dump_at_shutdown = 1 
innodb_lru_scan_depth = 4096
innodb_lock_wait_timeout = 5 
innodb_io_capacity = 10000
innodb_io_capacity_max = 20000
innodb_flush_method = O_DIRECT
#innodb_file_format = Barracuda
#innodb_file_format_max = Barracuda
innodb_flush_neighbors = 0 
innodb_log_file_size = 2147483648
innodb_log_files_in_group = 2 
innodb_log_buffer_size = 16777216
innodb_purge_threads = 4 
innodb_thread_concurrency = 10
innodb_print_all_deadlocks = 1 
innodb_strict_mode = 1 
innodb_sort_buffer_size = 67108864
innodb_write_io_threads = 16
innodb_read_io_threads = 16  
innodb_file_per_table = 1 
innodb_stats_persistent_sample_pages = 64
innodb_autoinc_lock_mode = 2
innodb_online_alter_log_max_size=1G
innodb_open_files=4096
#new innodb settings #
innodb_buffer_pool_dump_pct = 40
innodb_page_cleaners = 16
innodb_undo_log_truncate = 1
innodb_max_undo_log_size = 2G
innodb_purge_rseg_truncate_frequency = 128

#slave
server_id = "{{ groups[mysql_inventory_group].index(inventory_hostname) + 1 }}{{ mysql_port }}"
report_host = {{ ansible_default_ipv4.address }}
report_port = {{ mysql_port }}
sync_binlog = 1

#group replication
plugin-load-add                              = mysql_clone.so
plugin-load                                                 = group_replication.so
transaction_write_set_extraction ='XXHASH64'
loose-group_replication_group_name = "{{ mysql_inventory_group | to_uuid }}"
loose-group_replication_start_on_boot = off
loose-group_replication_local_address = "{{ ansible_default_ipv4.address }}:{{ mysql_mgr_port }}"
loose-group_replication_group_seeds ="{{ groups[mysql_inventory_group] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | map('regex_replace', '(.+)', '\\1:mysql_mgr_port') | list | join(',') }}"
loose-group_replication_bootstrap_group = off
loose-group_replication_ip_whitelist = "{{ groups[mysql_inventory_group] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list | join(',') }}"
